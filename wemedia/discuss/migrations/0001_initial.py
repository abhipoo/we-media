# Generated by Django 3.0.7 on 2020-06-21 15:49

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, default=None, max_length=1000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=10000)),
                ('is_op', models.BooleanField()),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='content_types',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='context',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('context_url', models.CharField(max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=1000)),
                ('description', models.CharField(blank=True, default=None, max_length=10000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='suggestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=10000)),
                ('ask', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='discuss.ask')),
            ],
        ),
        migrations.CreateModel(
            name='content',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, default=None, max_length=1000, null=True)),
                ('creator', models.CharField(blank=True, default=None, max_length=1000, null=True)),
                ('contexts', models.ManyToManyField(to='discuss.context')),
                ('related_content', models.ManyToManyField(blank=True, related_name='_content_related_content_+', to='discuss.content')),
                ('topics', models.ManyToManyField(to='discuss.Topic')),
            ],
        ),
        migrations.CreateModel(
            name='Comment_relation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('relation_type', models.CharField(max_length=100)),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sources', to='discuss.Comment')),
                ('target', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='targets', to='discuss.Comment')),
            ],
        ),
        migrations.AddField(
            model_name='comment',
            name='contents',
            field=models.ManyToManyField(blank=True, related_name='comments', to='discuss.content'),
        ),
        migrations.AddField(
            model_name='comment',
            name='topics',
            field=models.ManyToManyField(blank=True, related_name='comments', to='discuss.Topic'),
        ),
        migrations.AddField(
            model_name='ask',
            name='content_choices',
            field=models.ManyToManyField(to='discuss.content_types'),
        ),
    ]
